"""
Django settings for tabelogSite project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
environ.Env.read_env(BASE_DIR / '.env')  # BASE_DIR / '.env' の形で読み込み

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
# Falseにすることで、処理のエラー時に開発環境では表示された黄色い画面が表示されなくなる
# DEBUG = False

# クライアントからのリクエストを受け付けるサーバのアドレスを登録しておくための環境変数。
# ALLOWED_HOSTS = ['127.0.0.1' ,'tabelog-site.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'polls.apps.PollsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrapform',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tabelogSite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tabelogSite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
#}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'polls/static',
]
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Heroku用

# Whitenoiseの設定（静的ファイル管理）
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 画像関連の設定
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media_local'

# ログイン認証
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'top'
LOGOUT_REDIRECT_URL = 'top'

AUTHENTICATION_BACKENDS = [
    'polls.authentication.EmailBackend',  # カスタム認証バックエンド
    'django.contrib.auth.backends.ModelBackend',  # これを追加してadminのログインを許可
]

AUTH_USER_MODEL = 'polls.MemberInfo'

# CSRF設定
CSRF_COOKIE_SECURE = True  # HTTPSを使用している場合はTrueに設定

# メール設定(パスワードの再設定機能に必要)
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend" 
# EMAIL_HOST = 'smtp.mail.me.com'  # 使用するSMTPサーバー
EMAIL_HOST = 'smtp.gmail.com'  # GmailのSMTPサーバー
EMAIL_PORT = 587
EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'nisasi00tomo@ae.auone-net.jp'
EMAIL_HOST_USER = 'nisasi00tomo@gmail.com'
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')  #アプリケーションパスワードを設定

# Stripe関連設定
# Stripeサイトで得た公開鍵と秘密鍵を入力する。
# 公開可能キー
STRIPE_PUBLIC_KEY = env('STRIPE_PUBLIC_KEY')
# 取得済みのシークレットキー
STRIPE_SECRET_KEY = env('STRIPE_SECRET_KEY')
# プランID
STRIPE_PLAN_ID = env('STRIPE_PLAN_ID')

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

from socket import gethostname
hostname = gethostname()

# hostname が自分のコンピューターの名称だったら~
if "TZ2101-013" in hostname:
    # デバッグ環境
    DEBUG = True 
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'tabelogsite',
            'USER': 'admin',
            'PASSWORD': 'password',
            'HOST': 'localhost',  # または '127.0.0.1'
            'PORT': '5432',       # デフォルトのPostgreSQLポート
        }
    }
    # すべてのホストからのアクセスを許可
    ALLOWED_HOSTS = ['*'] 

    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"    #デバッグ

    DOMAIN_NAME = 'http://127.0.0.1:8000'  # あなたのドメインに置き換えてください
else:
    # 本番環境
    DEBUG = True

    import dj_database_url

    #▼▼▼ここからS3関連▼▼▼
    # S3バケットの設定
    AWS_ACCESS_KEY_ID = os.environ['AWS_ACCESS_KEY_ID']
    AWS_SECRET_ACCESS_KEY = os.environ['AWS_SECRET_ACCESS_KEY']
    AWS_STORAGE_BUCKET_NAME = os.environ['AWS_STORAGE_BUCKET_NAME']
    AWS_S3_REGION_NAME = 'us-east-2'  # S3のリージョンを指定
    AWS_S3_SIGNATURE_VERSION = 's3v4'

    # メディアファイルの保存先をS3に変更
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com'
    MEDIA_URL = f'https://{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com/'
    #S3_URL = 'http://%s.s3.amazonaws.com/' % AWS_STORAGE_BUCKET_NAME
    #MEDIA_URL = S3_URL

    AWS_S3_FILE_OVERWRITE = False
    AWS_DEFAULT_ACL = None

    # その他の設定
    MEDIA_ROOT = None  # ローカル保存は無効化

    #▲▲▲ここまでS3関連▲▲▲

    # データベース接続情報を一時的に保存(デバックなどに利用する用)
    db_from_env = dj_database_url.config()
    DATABASES = {
        # DATABASES辞書のdefaultに、dj_database_url.config()が返すデータベース設定を指定。
        # これにより、PostgreSQLやMySQLなど、Herokuの環境でデフォルト設定されているデータベースが利用される。
        # 'default': dj_database_url.config()
        'default': dj_database_url.config(default=os.environ.get('DATABASE_URL'))
    }
    # DATABASES['default'] = dj_database_url.config(conn_max_age=600, ssl_require=True)
    ALLOWED_HOSTS = ['*']

    DOMAIN_NAME = 'https://tabelog-site-ccebbf44c02d.herokuapp.com/'  # あなたのドメインに置き換えてください